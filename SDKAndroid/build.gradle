import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'signing'
    id 'org.jetbrains.kotlinx.kover'
}

def classesExcluded = [
    'app.cybrid.sdkandroid.BuildConfig',
    'app.cybrid.sdkandroid.core.Constants',
]

apply from: '../version.gradle'

group 'app.cybrid'
version sdk_version

android {
    compileSdk 34

    defaultConfig {
        minSdk 26
        targetSdk 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    publishing {
        singleVariant('release') {}
        singleVariant('debug') {
            withSourcesJar()
            withJavadocJar()
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = '1.5.3'
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {
            if (name == "testDebugUnitTest") {
                kover {}
            }
        }
    }
    namespace 'app.cybrid.sdkandroid'
}

android.sourceSets.configureEach {
    kotlin.srcDir("src/$name/kotlin")
}

tasks.withType(Test).configureEach {
    jvmArgs = ["--add-opens", "java.base/java.lang.invoke=ALL-UNNAMED"]
}

tasks.withType(KotlinCompile).configureEach {

    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs = ["-Xjvm-default=all-compatibility"]
}

kover {}

koverReport {
    defaults {
        mergeWith("debug")
    }
    filters {
        excludes {
            classes(classesExcluded)
        }
    }
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId 'app.cybrid'
                artifactId = 'cybrid-android-sdk'
                version version
                pom {
                    name = 'Cybrid Android SDK'
                    description = 'Android SDK for UI Components'
                    url = 'https://cybrid.xyz'
                    licenses {
                        license {
                            name = 'Apache-2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'erick-cybrid'
                            name = 'Erick Sanchez'
                            email = 'erick.sanchez@cybrid.app'
                        }
                    }
                    scm {
                        url = 'https://github.com/Cybrid-app/cybrid-sdk-android'
                    }
                }
            }
        }
    }
}

signing {

    System.out.println("Publish version ${version}")
    def signingPassword = System.getenv('gradle_sonatype_PASSPHRASE')
    def signingKey = null
    if(System.getenv('gradle_sonatype_SECRET')!= null) {
        signingKey = new String(System.getenv('gradle_sonatype_SECRET').decodeBase64())
    }
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications
}

dependencies {

    // -- Vars
    ext.retrofitVersion = '2.9.0'

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // -- Cybrid API Bank
    implementation('app.cybrid:cybrid-api-bank-kotlin:0.111.2') {
        exclude group:'org.apache.oltu.oauth2', module: 'org.apache.oltu.oauth2.common'
    }

    // -- Network
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.11'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"

    // -- Compose
    implementation 'androidx.compose.ui:ui:1.5.4'
    implementation 'androidx.compose.ui:ui-util:1.5.4'
    implementation 'androidx.compose.ui:ui-tooling:1.5.4'
    implementation 'androidx.compose.foundation:foundation:1.5.4'
    implementation 'androidx.compose.material:material:1.5.4'
    implementation 'androidx.compose.runtime:runtime-livedata:1.5.4'
    implementation 'androidx.compose.material3:material3:1.1.2'
    implementation 'androidx.compose.ui:ui-test-junit4:1.5.4'
    implementation 'androidx.activity:activity-compose:1.8.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2'
    implementation 'androidx.constraintlayout:constraintlayout-compose:1.0.1'
    implementation 'androidx.compose.material:material-icons-extended:1.5.4'
    implementation 'io.coil-kt:coil-compose:2.2.2'

    // -- Compose Testing
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.5.4'
    testImplementation 'androidx.compose.ui:ui-test-junit4:1.5.4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest:1.5.4'
    debugImplementation "androidx.customview:customview-poolingcontainer:1.0.0"

    // -- Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.6.2"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.6.2"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.activity:activity-ktx:1.8.1'
    implementation 'androidx.fragment:fragment-ktx:1.6.2'

    // -- Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    // -- Persona
    implementation 'com.withpersona.sdk2:inquiry:2.2.37'

    // -- Plaid
    implementation 'com.plaid.link:sdk-core:3.10.1'

    // -- Project Testing
    testImplementation 'androidx.test:runner:1.5.2'
    testImplementation "io.mockk:mockk:1.13.13"
    testImplementation 'org.robolectric:robolectric:4.11.1'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
}